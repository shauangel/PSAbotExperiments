[{"link": "https://stackoverflow.com/questions/74507490/how-can-i-print-both-positive-and-negative-indexes-together-with-its-correspondi", "keywords": [], "tags": ["python", "list", "tuples", "stdtuple"], "question": {"id": 74507490, "title": "how can I print both positive and negative indexes together with its corresponding element?", "content": "In the following code I want to print in the way mentioned in the question what am I getting is this: https://prnt.sc/oEjjTyr_dtdu Tried this hoping they would come together with their corresponding element on the same line with like this can you show me alternate solution also?", "abstract": ""}, "answers": [{"id": 74511838, "score": 0, "vote": 0, "content": "Just for fun, alternatively you can try this one:\nIt is using the negate index - ~0 becomes -1, ~1 becomes -2 etc.", "abstract": ""}, {"id": 74507761, "score": 0, "vote": 0, "content": "To get the corresponding negative index, you should subtract the length of the tuple from positive index. output: If you want to print them in reverse order (like what you showed in the question, just add reversed() to the range: output:", "abstract": ""}, {"id": 74507639, "score": 0, "vote": 0, "content": "Result: This is in the order you asked.", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/73571722/why-the-last-element-in-array-using-negative-index-slice-is-not-showing", "keywords": [], "tags": ["python", "list", "for-loop", "slice"], "question": {"id": 73571722, "title": "Why the last element in array using negative index slice is not showing?", "content": "I want to slice an array from the last element to the first element using a for loop to reduce the array, this is my code but for an reason the last element is not showing. Ignore the name of the function. Result: Expect result:", "abstract": ""}, "answers": [{"id": 73571868, "score": 3, "vote": 0, "content": "The farthest right you can specify with a negative index is -1, which refers to the final item in a sequence. However, slice semantics are that the index following the : is excluded from the slice. Therefore, there is no way, using a negative index to the right of the :, to include the final item in a list. You could \"fix\" this in your function by replacing -i with -i if i else len(arr): Output:", "abstract": ""}, {"id": 73571789, "score": 1, "vote": 0, "content": "Working: When you had i started at 1, so you told it, in essence, to do Which is what caused it to print nothing. instead, start at the length of the array and incrementally subtract 1.", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/54077428/python-numpy-array-negative-indexing", "keywords": [], "tags": ["python", "python-3.x", "numpy", "scipy", "numpy-ndarray"], "question": {"id": 54077428, "title": "Python numpy array negative indexing", "content": "I'm a bit confused about the indexing of numpy. Assume the following example: What I'm confused about, I can get the first row as 2D-array using x[0:-1]. But what does the -1 actually means in terms of indices? I would have thought, that calling x[1:-1] would then give me the second row, but instead if returns me an empty array, and to get what I want I need to use x[1:]? I'm a little bit confused.\nThanks for the help", "abstract": ""}, "answers": [{"id": 54077627, "score": 2, "vote": 0, "content": "If you request a slice x[a:b], you will receive a section spanning from a up to but not including b. So if you slice x[1:-1], the resulting array will not include -1, which happens to be the same as 1 in a (2,5) array. Another example: The last operation above slices x from row 1 up to (not including) the last row, which is just row 1.", "abstract": ""}, {"id": 54077567, "score": 10, "vote": 0, "content": "You have this statement: This way of indexing means that \"start at 1st row and go till the last row (excluded)\". That's why we get the first row as a result. But, when you do: It's asking NumPy to \"start at second row and not include the last row\". Since here the second row is also the last row, it is excluded and we get an empty array as a result. More information: There's nothing specific about using negative indexing such as -1 here. For instance, the following ways of indexing would also return empty arrays. When it comes to indexing in Python/NumPy, it's always \"left inclusive and right exclusive\". Here's something in plain Python (i.e. indexing a list) Please note the construct of indexing which is: [start:stop:step] If we start and stop at the same index, then we get nowhere and an empty data structure (array/list/tuple etc.) is returned as a result.", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/70425667/how-to-determine-the-negative-index-of-an-element-in-a-list", "keywords": [], "tags": ["python", "list"], "question": {"id": 70425667, "title": "How to determine the negative index of an element in a list?", "content": "How can I see the negative index of an element in a list in python list.index() will only return the positive index. How do I get the negative index of it?", "abstract": ""}, "answers": [{"id": 70425752, "score": 0, "vote": 0, "content": "You can use a simple custom logic for this for example: Code Output", "abstract": ""}, {"id": 70425723, "score": 0, "vote": 0, "content": "A negative index is the index from the end of the list. You could calculate it by subtracting the length of the list from the positive index:", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/11367902/negative-list-index", "keywords": [], "tags": ["python", "list"], "question": {"id": 11367902, "title": "Negative list index?", "content": "I'm trying to understand the following piece of code: Specifically, I don't understand what the index -1 refers to. If the index 0 refers to the first element, then what does -1 refer to?", "abstract": ""}, "answers": [{"id": 11367939, "score": 16, "vote": 0, "content": "List indexes of -x mean the xth item from the end of the list, so n[-1] means the last item in the list n. Any good Python tutorial should have told you this. It's an unusual convention that only a few other languages besides Python have adopted, but it is extraordinarily useful; in any other language you'll spend a lot of time writing n[n.length-1] to access the last item of a list.", "abstract": ""}, {"id": 11367936, "score": 212, "vote": 0, "content": "Negative numbers mean that you count from the right instead of the left. So, list[-1] refers to the last element, list[-2] is the second-last, and so on.", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/65695917/python-enumerate-a-slice-with-negative-indices", "keywords": [], "tags": ["python", "loops", "slice", "python-itertools", "enumeration"], "question": {"id": 65695917, "title": "Python: enumerate a slice with negative indices", "content": "I want to iterate over and enumerate the last few items of a list: a = [1,2,3,4,5]  [c for c, i in enumerate(a[-3:], -3)]  gives:\n [-3, -2, -1] [c for c, i in enumerate(list(a[-3:]))]  gives:\n[0, 1, 2] [c for c, i in islice(enumerate(a), -5)]  raises: So how do I get enumerated:\n[3, 4, 5] using negative indices\n? Example:  for i, j in enumerate(...): print(i,j) where ... contains a slice expression with only negative indices should give:", "abstract": ""}, "answers": [{"id": 65696096, "score": 0, "vote": 0, "content": "[c for c, i in enumerate(a[-3:], -3)]  gives:  [-3, -2, -1] you should get i not c [i for c, i in enumerate(a[-3:], -3)] this will gives you [3, 4, 5]", "abstract": ""}, {"id": 65695981, "score": 0, "vote": 0, "content": "Output: With enumerate:", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/62018714/negative-index-on-nested-list", "keywords": [], "tags": ["python", "list", "nested"], "question": {"id": 62018714, "title": "Negative index on nested list", "content": "Let's say I've got a nested list like this: and I want to insert elements at the end of the second nested list: The output i expected was: but instead I got: Can somebody explain this to me? I thought the index -1 always pointed to the last position of a list.", "abstract": ""}, "answers": [{"id": 62019410, "score": 2, "vote": 0, "content": "according to documentation (https://docs.python.org/3/tutorial/datastructures.html#more-on-lists), the first argument of the insert method is the index of the element before which to insert...and -1 designates the last element of a list: so by calling insert(-1,...) the element you insert will always become the next to last element of your list. this is easy to veryfy. if you insert yet another element you will notice the resulting list becomes so should probably use append instead. or calculate the index dynamically like", "abstract": ""}, {"id": 62018962, "score": 1, "vote": 0, "content": "From this page, list.insert(index, element) means you insert element at index index. .insert(-1, value) means inserting value at the last element of the list (index=len(lst)-1). So should solve the problem. Another approach is to use append as the other one said.", "abstract": ""}, {"id": 62019112, "score": 1, "vote": 0, "content": "If a list has for example 3 elements, they are numbered from 0 to 2 (i.e. 0, 1, 2). If you want use negative indices, they are numbered from -3 to -1 (i.e. -3, -2, -1). Now, if you want insert a new element at position -1, it is the same, as inserting at position 2, i.e. the inserted element will become element[2]. But element[2] will be then an element of the 4-element list, so its current position in the negative notation is not -1 but -2:", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/53932704/array-insert-with-negative-index", "keywords": [], "tags": ["python"], "question": {"id": 53932704, "title": "Array: Insert with negative index", "content": "-1 is not inserting the \"hello\" at the last index of the array If I have an array, x: Why -1 is not inserting the \"hello\" at the last index of the array?\nAs -1 index is refered to the last item of the list, so I was expecting: [1, 2, 3, \"hello\"]", "abstract": ""}, "answers": [{"id": 53932948, "score": 0, "vote": 0, "content": "So you want to add value at the end of the list. There is two way to add. - Append:  As the name says it will append (add) value to the last of the list  - Insert: Now in Insert you have to give the position where you want to add the value.\nso when you write  You are defining as to put value 5 at position len(x) ie 5 ", "abstract": ""}, {"id": 53932930, "score": 3, "vote": 0, "content": "From the google's documentation: https://developers.google.com/edu/python/lists list.insert(index, elem) -- inserts the element at the given index, shifting elements to the right. Insert should be read as: \"insert elem before the index\" in your case: \"insert 'hello' before the -1'th element (last element of the list) which is 3\". To insert to the end of the lists you should use list.append(elem) instead. list.append(elem) -- adds a single element to the end of the list. ", "abstract": ""}, {"id": 53932760, "score": 3, "vote": 0, "content": "If you want to add an element in the last using insert() function, then you have to specify the total length as index. You cannot use negative indexes. Negative indexes will start inserting from second last position and before.", "abstract": ""}, {"id": 53932720, "score": 4, "vote": 0, "content": ".append(item) is to append to the end. .insert(index, item) inserts to the place before another item. To \"insert\" to end, use .insert(len(x), item). Read more at Python documentation.", "abstract": ""}, {"id": 53932751, "score": 6, "vote": 0, "content": "Running help on method will usually give you the answer for these kind of questions:", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/52016803/convert-negative-index-in-python-to-positive-index", "keywords": [], "tags": ["python", "list", "indexing"], "question": {"id": 52016803, "title": "Convert negative index in Python to positive index", "content": "I'm trying to find a way to get the index of an item in a list in Python given its negative index, including an index of 0. For example with a list, l of size 4: I have tried using however this will not work when the index is 0. The only way I have found so far involves an if/else statement. Is there a possible way to do this in Python without having to use an if statement? I am trying to store the index of the item so I can access it later, but I am being given indices starting from 0 and moving backwards through the list, and would like to convert them from negative to positive.", "abstract": ""}, "answers": [{"id": 52016920, "score": 18, "vote": 0, "content": "index = index modulo size For a list of size 4, it will have following values for given indices :", "abstract": ""}, {"id": 52016818, "score": 3, "vote": 0, "content": "If you try to \"go back\" starting with a non-negative index, you can also use to compute the \"index from the back\". This is how you have to do it in many other programming languages. Pythons negative indices are just syntactic sugar. But if you really use negative indices, this dirty hack is a one-liner without if and else: Explanation:  This is good for learning Python, but I usually avoid such tricks. They are hard to read for you and others, and maybe you want to read your program in a few months again and you then you will wonder what this line is doing.", "abstract": ""}, {"id": 52016839, "score": 0, "vote": 0, "content": "A negative index is the same as subtracting from the length: So you could get an always positive value with a small if statement: In fact, you could use modulus to make an index wrap over back to 0 if the length is more than the length of the list:", "abstract": ""}, {"id": 52016854, "score": 1, "vote": 0, "content": "You can use the ~ complement operator. It will give you the inverse index as you require.", "abstract": ""}]}, {"link": "https://stackoverflow.com/questions/49284661/how-can-i-slice-a-list-till-end-with-negative-indexes", "keywords": [], "tags": ["python", "list", "slice", "sublist"], "question": {"id": 49284661, "title": "How can I slice a list till end with negative indexes", "content": "I learned that Python lists can also be traversed using negative index, so I tried to slice/sublist a list using negative index, but I cannot slice it till end.  My list is: Knowing that slicing syntax is [start:end] and end index is not calculated, I did upstairs = areas[-4:0] but this doesn't give me last element of the list.", "abstract": ""}, "answers": [{"id": 49285645, "score": 1, "vote": 0, "content": "0 is not a negative number which is why it will always refer to the left-most element. If you are hardcoding a single slice that is no problem, because you can just leave out the right boundary as in areas[-4:] But what to do if your boundaries are computed at runtime? As you found out this doesn't work. You'll often hear to just add the length of the list: But that doesn't always work either: So here is an idiom that works in a few more cases: But you can break this as well: What do we learn from this? Negative indices are ok for hard coding but require some care when used dynamically.\nIn a program, it may be safest to avoid negative semantics and consistently use max(0, index).", "abstract": ""}, {"id": 49285083, "score": 0, "vote": 0, "content": "Firstly, I wonder how you could access a slice by using areas[-4:0], it should return an empty list.  https://repl.it/repls/CarefreeOilyLine You can use areas[-4:]\nwhich should return  Actually, you can think -4 as len(areas) - 4 like  and 0 cannot represent 0 and len(areas) - 0 at the same time.\nOf course, it works with areas[-4:len(areas)].", "abstract": ""}, {"id": 49284698, "score": 5, "vote": 0, "content": "areas[-4:0] translates to areas[len(areas) - 4: 0], which is effectively slicing from a higher index to a lower. Semantically, this doesn't make much sense, and the result is an empty list.  You're instead looking for: When the last index is not specified, it is assumed you slice till the very end. As an aside, specifying 0 would make sense when you slice in reverse. For example, Happens to be perfectly valid. Here, you slice from len(areas) - 4 down to (but not including) index 0, in reverse.  ", "abstract": ""}]}]